version: '3.4'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    restart: unless-stopped
    tty: true
    ports:
      - "9000"
    command:
      - "php-fpm"
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
      APP_DEBUG: 1
      APP_ENV: local
      PUBSUB_EMULATOR_HOST: http://pubsub:8085
      PUBSUB_FRAUD_CHECK_TOPIC: 'fraud_check_stream'
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - composer_cache:/tmp/.composer
    networks:
      - fraud-network

  #PHP Relay service
  relay:
    image: fraud:local #local image
    container_name: relay
    restart: unless-stopped
    tty: true
    command: "php bin/console app:run-message-relay"
    environment:
      SERVICE_NAME: relay
      SERVICE_TAGS: dev
      APP_DEBUG: 1
      APP_ENV: local
      PUBSUB_EMULATOR_HOST: http://pubsub:8085
      PUBSUB_FRAUD_CHECK_TOPIC: 'fraud_check_stream'
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - fraud-network

  #PHP cold storage consumer service
  cs_consumer:
    image: fraud:local #local image
    container_name: cs_consumer
    restart: unless-stopped
    tty: true
    command: "php bin/console app:run-cold-storage-consumer"
    environment:
      SERVICE_NAME: cs_consumer
      SERVICE_TAGS: dev
      APP_DEBUG: 1
      APP_ENV: local
      PUBSUB_EMULATOR_HOST: http://pubsub:8085
      PUBSUB_FRAUD_CHECK_TOPIC: 'fraud_check_stream'
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - fraud-network

  #PHP Async message consumer service
  async_message_consumer:
    image: fraud:local #local image
    container_name: async_message_consumer
    restart: unless-stopped
    tty: true
    command: "php bin/console app:run-async-message-consumer"
    environment:
      SERVICE_NAME: am_consumer
      SERVICE_TAGS: dev
      APP_DEBUG: 1
      APP_ENV: local
      PUBSUB_EMULATOR_HOST: http://pubsub:8085
      PUBSUB_FRAUD_CHECK_TOPIC: 'fraud_check_stream'
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - fraud-network

  #PHP merchant analytics consumer service
  merchant_analytic_consumer:
    image: fraud:local #local image
    container_name: merchant_analytic_consumer
    restart: unless-stopped
    tty: true
    command: "php bin/console app:run-merchant-analytic-consumer"
    environment:
      SERVICE_NAME: ma_consumer
      SERVICE_TAGS: dev
      APP_DEBUG: 1
      APP_ENV: local
      PUBSUB_EMULATOR_HOST: http://pubsub:8085
      PUBSUB_FRAUD_CHECK_TOPIC: 'fraud_check_stream'
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - fraud-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - fraud-network

  #MySQL Service
  hot_storage:
    image: 'mysql:5.7'
    container_name: hot_storage
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_USER: fraud_local
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: fraud_hot_storage
      MYSQL_USER: fraud_local
      MYSQL_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    command: --init-file /hot_storage_local_init.sql
    volumes:
      - ./docker/mysql/hot_storage_local_init.sql:/hot_storage_local_init.sql
      - dbdata:/var/lib/mysql/
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - fraud-network

  #MySQL Service (cold storage)
  cold_storage:
    image: 'mysql:5.7'
    container_name: cold_storage
    restart: unless-stopped
    tty: true
    ports:
      - "3307:3307"
    environment:
      MYSQL_ROOT_USER: fraud_local
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: fraud_cold_storage
      MYSQL_USER: fraud_local
      MYSQL_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
      MYSQL_TCP_PORT: 3307
    command: --init-file /cold_storage_local_init.sql
    volumes:
      - ./docker/mysql/cold_storage_local_init.sql:/cold_storage_local_init.sql
      - cold_storage_volume:/var/lib/mysql/
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - fraud-network

  # Queueing service from GCP (Pub/sub emulator)
  pubsub:
    image: adhawk/google-pubsub-emulator
    ports:
      - 8085:8085
    networks:
      - fraud-network

#Docker Networks
networks:
  fraud-network:
    driver: bridge

#Volumes
volumes:
  dbdata:
  cold_storage_volume:
  composer_cache:


